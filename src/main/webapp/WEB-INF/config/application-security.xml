<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security.xsd">


    <security:http pattern="/resources/**" security="none"/>

    <security:http>
        <security:intercept-url pattern="/*" requires-channel="https"/>
        <security:port-mappings>
            <security:port-mapping http="9080" https="8443"/>
        </security:port-mappings>

        <security:access-denied-handler error-page="/invalidAccess"/>

        <security:intercept-url pattern="/admin**" access="hasAuthority('ADMIN')"/>
        <security:intercept-url pattern="/user**" access="hasAuthority('USER')"/>
        <security:intercept-url pattern="/userLogedIn**" access="hasAuthority('ADMIN','USER')"/>

        <security:remember-me token-validity-seconds="300" data-source-ref="datasource"/>

        <security:form-login always-use-default-target="true"
                             default-target-url="/userLogedIn"
                             login-page="/login" username-parameter="user"
                             password-parameter="password"/>

        <security:logout logout-success-url="/login?logout" delete-cookies="JSESSIONID"/>
    </security:http>


    <bean id="jdbcGroupsImpl" class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl">
        <property name="enableGroups" value="true"/>
        <property name="enableAuthorities" value="false"/>
        <property name="dataSource" ref="datasource"/>
        <property name="groupAuthoritiesByUsernameQuery" value="select g.id, g.group_name, ga.authority
from store.groups g, store.group_members gm, store.group_authorities ga
where gm.username = ? and g.id = ga.group_id and g.id = gm.group_id"/>
    </bean>
    <!-- password=emu-->
    <bean id="encoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

    <security:authentication-manager>
        <security:authentication-provider user-service-ref="jdbcGroupsImpl">
            <security:password-encoder ref="encoder"/>
        </security:authentication-provider>
    </security:authentication-manager>

</beans>